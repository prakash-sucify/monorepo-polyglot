name: Team Boundaries Check

on:
  pull_request:
    branches: [main, develop]

jobs:
  check-boundaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check affected projects
        id: affected
        run: |
          echo "affected=$(npx nx show projects --affected --base=origin/main)" >> $GITHUB_OUTPUT

      - name: Check team boundaries
        run: |
          # Get changed files
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          
          # Check if frontend changes affect backend
          if echo "$CHANGED_FILES" | grep -q "apps/frontend/"; then
            if echo "$CHANGED_FILES" | grep -q "apps/backend/"; then
              echo "‚ùå Frontend and backend changes in same PR"
              echo "This violates team boundaries. Please separate frontend and backend changes."
              exit 1
            fi
          fi
          
          # Check if backend services are changing together
          BACKEND_SERVICES=$(echo "$CHANGED_FILES" | grep "apps/backend/" | cut -d'/' -f3 | sort -u)
          if [ $(echo "$BACKEND_SERVICES" | wc -l) -gt 1 ]; then
            echo "‚ùå Multiple backend services changed in same PR"
            echo "Changed services: $BACKEND_SERVICES"
            echo "Please separate changes by service."
            exit 1
          fi
          
          echo "‚úÖ Team boundaries check passed"

      - name: Run ESLint with boundaries
        run: |
          # Run linting only on affected projects
          npx nx affected:lint --base=origin/main

      - name: Check import restrictions
        run: |
          # Check for forbidden imports
          FORBIDDEN_IMPORTS=$(find . -name "*.ts" -o -name "*.tsx" | xargs grep -l "from.*apps/backend" | grep "apps/frontend" || true)
          if [ ! -z "$FORBIDDEN_IMPORTS" ]; then
            echo "‚ùå Forbidden imports found:"
            echo "$FORBIDDEN_IMPORTS"
            exit 1
          fi
          
          FORBIDDEN_IMPORTS=$(find . -name "*.ts" -o -name "*.tsx" | xargs grep -l "from.*apps/frontend" | grep "apps/backend" || true)
          if [ ! -z "$FORBIDDEN_IMPORTS" ]; then
            echo "‚ùå Forbidden imports found:"
            echo "$FORBIDDEN_IMPORTS"
            exit 1
          fi
          
          echo "‚úÖ Import restrictions check passed"

      - name: Comment PR with affected projects
        uses: actions/github-script@v7
        with:
          script: |
            const affected = '${{ steps.affected.outputs.affected }}';
            const comment = `## üìä Affected Projects
            
            The following projects are affected by this PR:
            \`\`\`
            ${affected}
            \`\`\`
            
            ## üõ°Ô∏è Team Boundaries
            
            ‚úÖ Team boundaries check passed
            ‚úÖ Import restrictions check passed
            ‚úÖ No cross-team dependencies detected
            
            ## üöÄ Next Steps
            
            - [ ] Run tests: \`npx nx affected:test --base=origin/main\`
            - [ ] Run build: \`npx nx affected:build --base=origin/main\`
            - [ ] Deploy: \`npx nx affected:deploy --base=origin/main\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
