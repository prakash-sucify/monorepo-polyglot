# Payment Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-deployment
  namespace: monorepo-polyglot
  labels:
    app.kubernetes.io/name: payment-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: payment-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: payment-service
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
      - name: payment-service
        image: monorepo-polyglot/payment-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        envFrom:
        - configMapRef:
            name: monorepo-polyglot-config
        - secretRef:
            name: monorepo-polyglot-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
---
# Analytics Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-deployment
  namespace: monorepo-polyglot
  labels:
    app.kubernetes.io/name: analytics-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: analytics-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: analytics-service
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
      - name: analytics-service
        image: monorepo-polyglot/analytics-service:latest
        ports:
        - containerPort: 8081
        env:
        - name: PORT
          value: "8081"
        envFrom:
        - configMapRef:
            name: monorepo-polyglot-config
        - secretRef:
            name: monorepo-polyglot-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
---
# AI Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-deployment
  namespace: monorepo-polyglot
  labels:
    app.kubernetes.io/name: ai-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ai-service
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
      - name: ai-service
        image: monorepo-polyglot/ai-service:latest
        ports:
        - containerPort: 8082
        env:
        - name: PORT
          value: "8082"
        envFrom:
        - configMapRef:
            name: monorepo-polyglot-config
        - secretRef:
            name: monorepo-polyglot-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
---
# PDF Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-deployment
  namespace: monorepo-polyglot
  labels:
    app.kubernetes.io/name: pdf-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: pdf-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pdf-service
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
      - name: pdf-service
        image: monorepo-polyglot/pdf-service:latest
        ports:
        - containerPort: 8083
        env:
        - name: PORT
          value: "8083"
        envFrom:
        - configMapRef:
            name: monorepo-polyglot-config
        - secretRef:
            name: monorepo-polyglot-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: uploads
        emptyDir: {}
      restartPolicy: Always
