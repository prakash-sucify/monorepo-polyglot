{
  "name": "@monorepo-polyglot/source",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "dev": "nx serve web",
    "dev:web": "nx serve web",
    "dev:admin": "nx serve admin",
    "dev:auth": "nx serve auth-service",
    "dev:backend": "concurrently \"nx serve auth-service\" \"cd apps/backend/payment-service && go run main.go\" \"cd apps/backend/analytics-service && cargo run\" \"cd apps/backend/ai-service && uv run python src/ai_service_python/main.py\" \"cd apps/backend/pdf-service && mvn spring-boot:run\"",
    "dev:all": "concurrently \"nx serve web\" \"nx serve admin\" \"nx serve auth-service\" \"cd apps/backend/payment-service && go run main.go\" \"cd apps/backend/analytics-service && cargo run\" \"cd apps/backend/ai-service && uv run python src/ai_service_python/main.py\" \"cd apps/backend/pdf-service && mvn spring-boot:run\"",
    "build": "nx run-many --target=build --all",
    "build:frontend": "nx run-many --target=build --projects=web,admin",
    "build:backend": "nx run-many --target=build --projects=auth-service",
    "start:web": "nx serve web --prod",
    "start:admin": "nx serve admin --prod",
    "start:auth": "nx serve auth-service --prod",
    "test": "nx run-many --target=test --all",
    "test:frontend": "nx run-many --target=test --projects=web,admin",
    "test:backend": "nx run-many --target=test --projects=auth-service",
    "lint": "nx run-many --target=lint --all",
    "lint:frontend": "nx run-many --target=lint --projects=web,admin",
    "lint:backend": "nx run-many --target=lint --projects=auth-service",
    "docker:up": "docker compose up --build",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",

    "clean": "nx reset && rm -rf node_modules && pnpm install",
    "build:all": "./tools/scripts/build-all.sh",
    "clean:all": "./tools/scripts/clean.sh",
    "health:check": "./tools/scripts/health-check.sh",
    "security:scan": "./security/scanning/security-scan.sh",
    "secrets:generate": "./security/secrets/secrets-utils.sh generate",
    "secrets:encrypt": "./security/secrets/secrets-utils.sh encrypt",
    "secrets:rotate": "./security/secrets/secrets-utils.sh rotate",
    "secrets:backup": "./security/secrets/secrets-utils.sh backup",
    "secrets:validate": "./security/secrets/secrets-utils.sh validate",
    "monitoring:up": "docker compose -f monitoring/docker-compose.monitoring.yml up -d",
    "monitoring:down": "docker compose -f monitoring/docker-compose.monitoring.yml down",
    "k8s:apply": "kubectl apply -f k8s/base/",
    "k8s:delete": "kubectl delete -f k8s/base/",
    "k8s:status": "kubectl get pods -n monorepo-polyglot",
    "local:deploy": "docker compose up --build -d",
    "local:dev": "./tools/scripts/local-deploy.sh local",
    "local:k8s": "./tools/scripts/local-deploy.sh k8s",
    "local:stop": "docker compose down",
    "local:health": "./tools/scripts/local-deploy.sh health",
    "local:urls": "./tools/scripts/local-deploy.sh urls",
    "local:cleanup": "./tools/scripts/local-deploy.sh cleanup",
    "istio:install": "istioctl install --set values.defaultRevision=default -y",
    "istio:uninstall": "istioctl uninstall --purge -y",
    "istio:status": "istioctl proxy-status",
    "kong:deploy": "kubectl apply -f k8s/kong/",
    "kong:delete": "kubectl delete -f k8s/kong/",
    "jaeger:deploy": "kubectl apply -f k8s/jaeger/",
    "jaeger:delete": "kubectl delete -f k8s/jaeger/",
    "haproxy:deploy": "kubectl apply -f k8s/haproxy/",
    "haproxy:delete": "kubectl delete -f k8s/haproxy/",
    "enterprise:deploy": "kubectl apply -f k8s/istio/ && kubectl apply -f k8s/kong/ && kubectl apply -f k8s/jaeger/ && kubectl apply -f k8s/haproxy/",
    "enterprise:delete": "kubectl delete -f k8s/haproxy/ && kubectl delete -f k8s/jaeger/ && kubectl delete -f k8s/kong/ && kubectl delete -f k8s/istio/",
    "team:frontend": "./tools/scripts/team-builds.sh frontend",
    "team:backend": "./tools/scripts/team-builds.sh backend",
    "team:data": "./tools/scripts/team-builds.sh data",
    "team:ai": "./tools/scripts/team-builds.sh ai",
    "team:platform": "./tools/scripts/team-builds.sh platform",
    "boundaries:check": "npx nx affected:lint --base=origin/main",
    "boundaries:validate": "npx nx run-many -t lint --all",
    "clone:frontend": "./tools/scripts/team-clone.sh frontend",
    "clone:backend": "./tools/scripts/team-clone.sh backend",
    "clone:data": "./tools/scripts/team-clone.sh data",
    "clone:ai": "./tools/scripts/team-clone.sh ai",
    "clone:platform": "./tools/scripts/team-clone.sh platform",
    "clone:full": "./tools/scripts/team-clone.sh full"
  },
  "private": true,
  "dependencies": {
    "axios": "^1.6.0",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "date-fns": "^2.30.0",
    "dotenv": "^16.3.1",
    "empty": "0.10.1",
    "express": "^4.21.2",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "next": "~15.2.4",
    "zod": "^3.22.0",
    "react": "19.0.0",
    "react-dom": "19.0.0"
  },
  "devDependencies": {
    "@eslint/compat": "^1.1.1",
    "@eslint/eslintrc": "^2.1.1",
    "@eslint/js": "^9.8.0",
    "@next/eslint-plugin-next": "^15.2.4",
    "@nx/cypress": "21.4.1",
    "@nx/esbuild": "21.4.1",
    "@nx/eslint": "21.4.1",
    "@nx/eslint-plugin": "21.4.1",
    "@nx/jest": "21.4.1",
    "@nx/js": "21.4.1",
    "@nx/next": "^21.4.1",
    "@nx/node": "^21.4.1",
    "@nx/rollup": "21.4.1",
    "@nx/workspace": "21.4.1",
    "@swc-node/register": "~1.9.1",
    "@swc/cli": "~0.6.0",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@swc/jest": "~0.2.38",
    "@testing-library/dom": "10.4.0",
    "@testing-library/react": "16.1.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/jest": "^30.0.0",
    "@types/node": "20.19.9",
    "@types/react": "19.0.0",
    "@types/react-dom": "19.0.0",
    "babel-jest": "^30.0.2",
    "concurrently": "^9.2.1",
    "cypress": "^14.2.1",
    "esbuild": "^0.19.2",
    "eslint": "^9.8.0",
    "eslint-config-next": "^15.2.4",
    "eslint-config-prettier": "^10.0.0",
    "eslint-plugin-cypress": "^3.5.0",
    "eslint-plugin-import": "2.31.0",
    "eslint-plugin-jsx-a11y": "6.10.1",
    "eslint-plugin-react": "7.35.0",
    "eslint-plugin-react-hooks": "5.0.0",
    "jest": "^30.0.2",
    "jest-environment-jsdom": "^30.0.2",
    "jest-environment-node": "^30.0.2",
    "jest-util": "^30.0.2",
    "jsonc-eslint-parser": "^2.1.0",
    "nx": "21.4.1",
    "prettier": "^2.6.2",
    "rollup": "^4.14.0",
    "swc-loader": "0.1.15",
    "ts-jest": "^29.4.0",
    "ts-node": "10.9.1",
    "tslib": "^2.3.0",
    "typescript": "~5.8.2",
    "typescript-eslint": "^8.29.0"
  }
}
